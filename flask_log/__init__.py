# coding=utf-8# Copyright (c) 2018 - <tao.zhang@moji.com>"""Author: tao.zhangCreate Date: 2018/4/20@Site    :@Software: PyCharmdescirption:"""import loggingfrom logging.handlers import TimedRotatingFileHandler__all__ = ('FlaskLog', )__version__ = '0.0.1'class FlaskLog(object):    def __init__(self, app=None):        self.level = logging.INFO        self.logwhen = "midnight"        self.logbackupcount = 60        self.logname = "./logs/flaskapp.log"        if app is not None:            self.init_app(app)    def init_app(self, app):        self.level = app.config.get("LOG_LEVEL") if app.config.get("LOG_LEVEL") is not None else self.level        self.logname = app.config.get("LOG_NAME") if app.config.get("LOG_NAME") is not None else self.logname        self.logwhen = app.config.get("LOG_WHEN") if app.config.get("LOG_WHEN") is not None else self.logwhen        self.logbackupcount = app.config.get("LOG_BACKUPCOUNT") if app.config.get("LOG_BACKUPCOUNT") is not None else self.logbackupcount        fmt = '%(asctime)s - %(process)d - %(levelname)s - %(filename)s:%(lineno)d - %(message)s'        logger = logging.getLogger()        logger.setLevel(self.level)        formatter = logging.Formatter(fmt)        th = TimedRotatingFileHandler(filename=self.logname, when=self.logwhen, backupCount=self.logbackupcount)        th.setFormatter(formatter)        app.logger.addHandler(th)